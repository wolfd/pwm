<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Password Management Servlets (PWM)
  ~ http://code.google.com/p/pwm/
  ~
  ~ Copyright (c) 2006-2009 Novell, Inc.
  ~ Copyright (c) 2009-2014 The PWM Project
  ~
  ~ This program is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation; either version 2 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program; if not, write to the Free Software
  ~ Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  -->

<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="PWM" version="3.0">
    <display-name>PWM Password Management</display-name>
    <distributable/>
    <description>Password Management Servlet</description>
    <context-param>
        <description>
            Explicit location of application working directory. If a relative path is specified, it is relative to the
            deployed applications base directory.
        </description>
        <param-name>applicationPath</param-name>
        <param-value>/WEB-INF</param-value>
    </context-param>
    <context-param>
        <description>
            Name of configuration XML file file. If a relative path is specified, it is relative to the applicationPath
            param.
        </description>
        <param-name>configurationFile</param-name>
        <param-value>PwmConfiguration.xml</param-value>
    </context-param>
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    <servlet>
        <servlet-name>Jersey REST Service</servlet-name>
        <servlet-class>com.sun.jersey.spi.container.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
            <param-value>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name>
            <param-value>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.config.property.packages</param-name>
            <param-value>password.pwm.ws.server.rest</param-value>
        </init-param>
        <init-param>
            <param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
            <param-value>true</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Jersey REST Service</servlet-name>
        <url-pattern>/public/rest/*</url-pattern>
    </servlet-mapping>
    <!-- uncomment and set parameters for CAS integration
    <filter>
        <filter-name>CAS Validation Filter</filter-name>
        <filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
        <init-param>
            <param-name>casServerUrlPrefix</param-name>
            <param-value>https://cas.localdomain.local:8443/cas/</param-value>
        </init-param>
        <init-param>
            <param-name>serverName</param-name>
            <param-value>https://pwm.localdomain.local:8443</param-value>
        </init-param>
        <init-param>
            <param-name>proxyCallbackUrl</param-name>
            <param-value>https://pwm.localdomain.local:8443/pwm/proxyCallback</param-value>
        </init-param>
        <init-param>
            <param-name>proxyReceptorUrl</param-name>
            <param-value>/proxyCallback</param-value>
        </init-param>
    </filter>
    <filter>
        <filter-name>CAS Authentication Filter</filter-name>
        <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
        <init-param>
            <param-name>casServerLoginUrl</param-name>
            <param-value>https://cas.localdomain.local:8443/cas/login</param-value>
        </init-param>
        <init-param>
            <param-name>serverName</param-name>
            <param-value>https://pwm.localdomain.local:8443</param-value>
        </init-param>
        <init-param>
            <param-name>renew</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>gateway</param-name>
            <param-value>false</param-value>
        </init-param>
    </filter>
    <filter>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <listener>
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
    </listener>
    <filter-mapping>
        <filter-name>CAS Validation Filter</filter-name>
        <url-pattern>/private/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CAS Authentication Filter</filter-name>
        <url-pattern>/private/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CAS Validation Filter</filter-name>
        <url-pattern>/proxyCallback</url-pattern>
    </filter-mapping>
    -->
    <filter>
        <filter-name>ApplicationModeFilter</filter-name>
        <filter-class>password.pwm.http.filter.ApplicationModeFilter</filter-class>
    </filter>
    <filter>
        <filter-name>GZIPFilter</filter-name>
        <filter-class>password.pwm.http.filter.GZIPFilter</filter-class>
    </filter>
    <filter>
        <filter-name>SessionFilter</filter-name>
        <filter-class>password.pwm.http.filter.SessionFilter</filter-class>
    </filter>
    <filter>
        <filter-name>CaptchaFilter</filter-name>
        <filter-class>password.pwm.http.filter.CaptchaFilter</filter-class>
    </filter>
    <filter>
        <filter-name>AuthenticationFilter</filter-name>
        <filter-class>password.pwm.http.filter.AuthenticationFilter</filter-class>
    </filter>
    <filter>
        <filter-name>AuthorizationFilter</filter-name>
        <filter-class>password.pwm.http.filter.AuthorizationFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>ApplicationModeFilter</filter-name>
        <url-pattern>*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>GZIPFilter</filter-name>
        <url-pattern>/public/NewUser</url-pattern>
        <url-pattern>/public/ActivateUser</url-pattern>
        <url-pattern>/public/ForgottenPassword</url-pattern>
        <url-pattern>/public/ForgottenUsername</url-pattern>
        <url-pattern>/public/CommandServlet</url-pattern>
        <url-pattern>/public/Logout</url-pattern>
        <url-pattern>/private/*</url-pattern>
        <url-pattern>/config/*</url-pattern>
        <url-pattern>/</url-pattern>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>SessionFilter</filter-name>
        <url-pattern>/public/NewUser</url-pattern>
        <url-pattern>/public/ActivateUser</url-pattern>
        <url-pattern>/public/ForgottenPassword</url-pattern>
        <url-pattern>/public/ForgottenUsername</url-pattern>
        <url-pattern>/public/CommandServlet</url-pattern>
        <url-pattern>/public/Logout</url-pattern>
        <url-pattern>/private/*</url-pattern>
        <url-pattern>/config/*</url-pattern>
        <url-pattern>/</url-pattern>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CaptchaFilter</filter-name>
        <url-pattern>/private/Login</url-pattern>
        <url-pattern>/public/NewUser</url-pattern>
        <url-pattern>/public/ActivateUser</url-pattern>
        <url-pattern>/public/ForgottenPassword</url-pattern>
        <url-pattern>/public/ForgottenUsername</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>AuthenticationFilter</filter-name>
        <url-pattern>/private/*</url-pattern>
        <url-pattern>/public/ChangePassword</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>AuthorizationFilter</filter-name>
        <url-pattern>/private/admin/*</url-pattern>
    </filter-mapping>
    <listener>
        <listener-class>password.pwm.http.HttpEventManager</listener-class>
    </listener>
    <servlet>
        <servlet-name>LoginServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.LoginServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>LoginActionServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.LoginActionServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>OAuthConsumerServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.OAuthConsumerServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>LogoutServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.LogoutServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ChangePasswordServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.ChangePasswordServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>SetupResponsesServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.SetupResponsesServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>SetupOtpServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.SetupOtpServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ForgottenPasswordServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.ForgottenPasswordServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>CommandServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.CommandServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>NewUserServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.NewUserServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>GuestRegistrationServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.GuestRegistrationServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ActivateUserServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.ActivateUserServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>UpdateProfileServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.UpdateProfileServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ForgottenUsernameServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.ForgottenUsernameServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ShortcutServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.ShortcutServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>PeopleSearchServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.PeopleSearchServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>CaptchaServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.CaptchaServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ConfigEditorServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.ConfigEditorServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ConfigManagerServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.ConfigManagerServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ConfigGuideServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.ConfigGuideServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ResourceFileServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.ResourceFileServlet</servlet-class>
        <init-param>
            <description>zip files to treat as resource paths, separated by semi-colons (;), must end in .zip
            </description>
            <param-name>zipFileResources</param-name>
            <param-value>/public/resources/dojo.zip;/public/resources/flags.zip</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet>
        <servlet-name>HelpdeskServlet</servlet-name>
        <servlet-class>password.pwm.http.servlet.HelpdeskServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>LoginServlet</servlet-name>
        <url-pattern>/private/Login</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>LoginActionServlet</servlet-name>
        <url-pattern>/private/LoginAction</url-pattern>
        <url-pattern>/private/LoginAction/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>OAuthConsumerServlet</servlet-name>
        <url-pattern>/public/oauth</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>LogoutServlet</servlet-name>
        <url-pattern>/private/Logout</url-pattern>
        <url-pattern>/public/Logout</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ChangePasswordServlet</servlet-name>
        <url-pattern>/private/ChangePassword</url-pattern>
        <url-pattern>/public/ChangePassword</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>SetupResponsesServlet</servlet-name>
        <url-pattern>/private/SetupResponses</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>SetupOtpServlet</servlet-name>
        <url-pattern>/private/SetupOtp</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ForgottenUsernameServlet</servlet-name>
        <url-pattern>/public/ForgottenUsername</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ForgottenPasswordServlet</servlet-name>
        <url-pattern>/public/ForgottenPassword</url-pattern>
        <url-pattern>/public/ForgottenPassword/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>CommandServlet</servlet-name>
        <url-pattern>/public/CommandServlet</url-pattern>
        <url-pattern>/private/CommandServlet</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>NewUserServlet</servlet-name>
        <url-pattern>/public/NewUser</url-pattern>
        <url-pattern>/public/NewUser/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>GuestRegistrationServlet</servlet-name>
        <url-pattern>/private/GuestRegistration</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ActivateUserServlet</servlet-name>
        <url-pattern>/public/ActivateUser</url-pattern>
        <url-pattern>/public/ActivateUser/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>UpdateProfileServlet</servlet-name>
        <url-pattern>/private/UpdateProfile</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ShortcutServlet</servlet-name>
        <url-pattern>/private/Shortcuts</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>PeopleSearchServlet</servlet-name>
        <url-pattern>/private/PeopleSearch</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>CaptchaServlet</servlet-name>
        <url-pattern>/public/Captcha</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ConfigEditorServlet</servlet-name>
        <url-pattern>/private/config/ConfigEditor</url-pattern>
        <url-pattern>/private/config/ConfigEditor/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ConfigManagerServlet</servlet-name>
        <url-pattern>/private/config/ConfigManager</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ConfigGuideServlet</servlet-name>
        <url-pattern>/private/config/ConfigGuide</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ResourceFileServlet</servlet-name>
        <url-pattern>/public/resources/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>HelpdeskServlet</servlet-name>
        <url-pattern>/private/Helpdesk</url-pattern>
    </servlet-mapping>
    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/jsp/error-http.jsp</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/WEB-INF/jsp/error-http.jsp</location>
    </error-page>
    <session-config>
        <!-- Please use the Configuration to control the idle session timeout.
        This value will be overridden.  -->
        <session-timeout>5</session-timeout>
        <cookie-config>
            <http-only>true</http-only>
        </cookie-config>
    </session-config>
    <jsp-config>
        <taglib>
            <taglib-uri>pwm</taglib-uri>
            <taglib-location>/WEB-INF/pwm-taglib.tld</taglib-location>
        </taglib>
        <jsp-property-group>
            <url-pattern>*.jsp</url-pattern>
            <trim-directive-whitespaces>true</trim-directive-whitespaces>
        </jsp-property-group>
    </jsp-config>
</web-app>

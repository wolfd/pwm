<!--
  ~ Password Management Servlets (PWM)
  ~ http://code.google.com/p/pwm/
  ~
  ~ Copyright (c) 2006-2009 Novell, Inc.
  ~ Copyright (c) 2009-2012 The PWM Project
  ~
  ~ This program is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation; either version 2 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program; if not, write to the Free Software
  ~ Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  -->

<project default="makeWAR" name="PWM Build Script">
    <target name="init">
        <property file="build.properties"/>
        <echo>PWM Build Script</echo>
        <echo> working directory: ${basedir}</echo>
        <echo> </echo>
        <echo>settings:</echo>
        <echo> source root: ${src.root}</echo>
        <echo> destination: ${destination}</echo>
        <echo> destination war: ${destination.war}</echo>
        <echo> build lib: ${build_lib}</echo>
    </target>

    <target name="clean" depends="init">
        <delete dir="${destination}"/>
        <delete file="${destination.war}"/>
    </target>

    <target name="svnExport" depends="init">
        <typedef resource="org/tigris/subversion/svnant/svnantlib.xml">
            <classpath>
                <fileset dir="${build_lib}/ant" includes="*.jar"/>
            </classpath>
        </typedef>
        <echo> svn source: ${build_lib}</echo>

        <property name="svnExportDir" value="${destination}/svn-current"/>
        <delete dir="${svnExportDir}"/>
        <mkdir dir="${svnExportDir}"/>
        <svnSetting javahl="false" svnkit="true" username="" password="" id="svn.settings"/>
        <svn refid="svn.settings"> <!-- single checkout to determine revision -->
            <checkout url="${svn.source}" destpath="${svnExportDir}/checkout" recurse="false"/>
            <status path="${svnExportDir}/checkout" revisionproperty="svn.revision"/>
        </svn>

        <echo>Beginning export of revision ${svn.revision}</echo>
        <delete dir="${svnExportDir}"/>
        <mkdir dir="${svnExportDir}"/>
        <svn refid="svn.settings">
            <export srcurl="https://pwm.googlecode.com/svn/trunk"  destPath="${svnExportDir}"/>
        </svn>
        <echo>Read revision ${svn.revision}</echo>
    </target>

    <target name="svnRevisionRead" depends="init">
        <typedef resource="org/tigris/subversion/svnant/svnantlib.xml">
            <classpath>
                <fileset dir="${build_lib}/ant" includes="*.jar"/>
            </classpath>
        </typedef>
        <echo> svn source: ${build_lib}</echo>

        <property name="svnExportDir" value="${destination}/svn-current"/>
        <svnSetting javahl="false" svnkit="true" username="" password="" id="svn.settings"/>
        <svn refid="svn.settings"> <!-- single checkout to determine revision -->
            <checkout url="${svn.source}" destpath="${svnExportDir}/checkout" recurse="false"/>
            <status path="${svnExportDir}/checkout" revisionproperty="svn.revision"/>
        </svn>
        <property name="svnRevisionNumber" value="${svn.revision}"/>
        <echo>Read revision ${svnRevisionNumber}</echo>
    </target>

    <target name="compileCode" depends="init">
        <mkdir dir="${destination}/bin"/>
        <javac srcdir="${src.root}/src" destdir="${destination}/bin" debug="true" target="1.5" source="1.5">
            <classpath>
                <fileset dir="${src.root}/web/WEB-INF/lib" includes="*.jar"/>
                <fileset dir="${build_lib}" includes="*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="copyResources" depends="init">
        <mkdir dir="${destination}/bin"/>
        <copy todir="${destination}/bin">
            <fileset dir="${src.root}/src" includes="**/*.properties"/>
            <fileset dir="${src.root}/src" includes="**/*.xml"/>
        </copy>
    </target>                                                                                                          

    <target name="makeWAR" depends="compileCode,copyResources,makeJAR">
        <war zipfile="${destination.war}" webxml="${src.root}/web/WEB-INF/web.xml">
            <zipfileset dir="${src.root}/web"/>
            <zipfileset file="${destination}/pwm-servlet.jar" prefix="WEB-INF/lib"/>
        </war>
    </target>

    <target name="makeJAR" depends="compileCode,copyResources">
        <jar destfile="${destination}/pwm-servlet.jar">
            <fileset dir="${destination}/bin"/>
            <zipfileset dir="${src.root}/src" prefix="src"/>
            <manifest>
                <attribute name="Main-Class" value="password.pwm.util.JarMain"/>
            </manifest>
        </jar>
    </target>

    <target name="javadoc" depends="init">
        <mkdir dir="${destination}/javadoc"/>
        <javadoc packagenames="password.pwm.*"
                 sourcepath="${src.root}/src"
                 destdir="${destination}/javadoc"
                 private="yes" source="1.6">
            <link href="http://docs.oracle.com/javase/6/docs/api/"/>
            <link href="http://download.oracle.com/docs/cd/E17802_01/products/products/servlet/2.3/javadoc/"/>
            <link href="http://ldapchai.googlecode.com/svn/trunk/javadoc/"/>
            <classpath>
                <fileset dir="${src.root}/web/WEB-INF/lib" includes="*.jar"/>
                <fileset dir="${build_lib}" includes="*.jar"/>
            </classpath>
        </javadoc>
    </target>

    <target name="makeZIP" depends="makeWAR,javadoc">
        <zip zipfile="${destination}/pwm.zip" filesonly="true">
            <zipfileset file="${destination.war}"/>
            <zipfileset dir="${src.root}/build_lib" prefix="servlet/build_lib"/>
            <zipfileset dir="${src.root}/src" prefix="servlet/src"/>
            <zipfileset dir="${src.root}/web" prefix="servlet/web"/>
            <zipfileset dir="${src.root}/../supplemental" prefix="supplemental"/>
            <zipfileset dir="${src.root}/." includes="build.**" prefix="servlet"/>
        </zip>
    </target>

    <target name="makeRelease" depends="updateBuildInfo,makeZIP">
    </target>

    <target name="updateBuildInfo" depends="init,svnRevisionRead">
        <property name="buildFilename" value="${src.root}/src/password/pwm/BuildInformation.properties"/>
        <propertyfile file="${buildFilename}">
            <entry key="build.java.vendor" value="${java.vendor}"/>
            <entry key="build.java.version" value="${java.version}"/>
            <entry key="build.time" type="date" value="now" pattern="yyyy.MM.dd HH:mm:ss z"/>
            <entry key="build.user" value="${user.name}"/>
            <entry key="build.revision" value="${svnRevisionNumber}"/>
        </propertyfile>
        <buildnumber file="${buildFilename}"/>
        <echo>build number: ${build.number}</echo>
    </target>
</project>
